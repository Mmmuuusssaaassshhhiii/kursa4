@using kursa4.Models
@using Microsoft.AspNetCore.Mvc.TagHelpers

<div class="row mt-4">
    <!-- Sidebar -->
    <div class="col-md-3">
        <div class="card p-3 shadow-sm">
            <form id="filter-form">
                <div class="mb-3">
                    
                    <h5>Поиск</h5>
                    
                    <input type="text" class="form-control" name="search" value="@Context.Request.Query["search"]" placeholder="Найти...">
                </div>

                <h5>Фильтры</h5>

                @* Категория *@
                <div class="mb-3">
                    <label class="form-label">Категория</label>
                    <select class="form-select" name="category">
                        <option value="">Все</option>
                        @{
                            var selectedCategory = Context.Request.Query["category"].ToString();
                            foreach (var category in (IEnumerable<Category>)ViewBag.Categories)
                            {
                                <option value="@category.Name" selected="@(selectedCategory == category.Name ? "selected" : null)">@category.Name</option>
                            }
                        }
                    </select>
                </div>

                @* Производитель *@
                <div class="mb-3">
                    <label class="form-label">Производитель</label>
                    <select class="form-select" name="brand">
                        <option value="">Все</option>
                        @{
                            var selectedBrand = Context.Request.Query["brand"].ToString();
                            foreach (var brand in (IEnumerable<Brand>)ViewBag.Brands)
                            {
                                <option value="@brand.Name" selected="@(selectedBrand == brand.Name ? "selected" : null)">@brand.Name</option>
                            }
                        }
                    </select>
                </div>

                @* Цены *@
                @{
                    var priceFrom = Context.Request.Query["priceFrom"].ToString();
                    var priceTo = Context.Request.Query["priceTo"].ToString();
                }
                <div class="mb-3">
                    <label class="form-label">Цена от</label>
                    <input type="number" class="form-control" name="priceFrom" value="@priceFrom" />
                </div>
                <div class="mb-3">
                    <label class="form-label">Цена до</label>
                    <input type="number" class="form-control" name="priceTo" value="@priceTo" />
                </div>

                @* CPU *@
                <div class="mb-3">
                    <label class="form-label">Процессор</label>
                    <select class="form-select" name="CPU">
                        <option value="">Все</option>
                        @{
                            var selectedCpu = Context.Request.Query["cpu"].ToString();
                            foreach (var cpu in (IEnumerable<CPU>)ViewBag.CPUs)
                            {
                                <option value="@cpu.Name" selected="@(selectedCpu == cpu.Name ? "selected" : null)">@cpu.Name</option>
                            }
                        }
                    </select>
                </div>

                @* GPU *@
                <div class="mb-3">
                    <label class="form-label">Видеокарта</label>
                    <select class="form-select" name="GPU">
                        <option value="">Все</option>
                        @{
                            var selectedGpu = Context.Request.Query["gpu"].ToString();
                            foreach (var gpu in (IEnumerable<GPU>)ViewBag.GPUs)
                            {
                                <option value="@gpu.Name" selected="@(selectedGpu == gpu.Name ? "selected" : null)">@gpu.Name</option>
                            }
                        }
                    </select>
                </div>

                @* RAM Type *@
                <div class="mb-3">
                    <label class="form-label">Тип оперативной памяти</label>
                    <select class="form-select" name="ramType">
                        <option value="">Все</option>
                        @{
                            var selectedRamType = Context.Request.Query["ramType"].ToString();
                            var ramTypes = ((IEnumerable<RAM>)ViewBag.RAMs).Select(r => r.Type).Distinct();
                            foreach (var type in ramTypes)
                            {
                                <option value="@type" selected="@(selectedRamType == type ? "selected" : null)">@type</option>
                            }
                        }
                    </select>
                </div>

                @* RAM Size *@
                <div class="mb-3">
                    <label class="form-label">Размер оперативной памяти</label>
                    <select class="form-select" name="ramSize">
                        <option value="">Все</option>
                        @{
                            var selectedRamSize = Context.Request.Query["ramSize"].ToString();
                            var ramSizes = ((IEnumerable<RAM>)ViewBag.RAMs).Select(r => r.SizeGb).Distinct().OrderBy(s => s);
                            foreach (var size in ramSizes)
                            {
                                <option value="@size" selected="@(selectedRamSize == size.ToString() ? "selected" : null)">@size ГБ</option>
                            }
                        }
                    </select>
                </div>

                @* Storage Type *@
                <div class="mb-3">
                    <label class="form-label">Тип хранилища</label>
                    <select class="form-select" name="storageType">
                        <option value="">Все</option>
                        @{
                            var selectedStorageType = Context.Request.Query["storageType"].ToString();
                            var storageTypes = ((IEnumerable<Storage>)ViewBag.Storages).Select(s => s.Type).Distinct();
                            foreach (var type in storageTypes)
                            {
                                <option value="@type" selected="@(selectedStorageType == type ? "selected" : null)">@type</option>
                            }
                        }
                    </select>
                </div>

                @* Storage Size *@
                <div class="mb-3">
                    <label class="form-label">Размер хранилища</label>
                    <select class="form-select" name="storageSize">
                        <option value="">Все</option>
                        @{
                            var selectedStorageSize = Context.Request.Query["storageSize"].ToString();
                            var storageSizes = ((IEnumerable<Storage>)ViewBag.Storages).Select(s => s.SizeGb).Distinct().OrderBy(s => s);
                            foreach (var size in storageSizes)
                            {
                                <option value="@size" selected="@(selectedStorageSize == size.ToString() ? "selected" : null)">@size ГБ</option>
                            }
                        }
                    </select>
                </div>  

                <div class="mb-3">
                    <h5>Сортировать по</h5>
                    <select class="form-select" name="sortBy">
                        @{
                            var sortBy = Context.Request.Query["sortBy"].ToString();
                            var options = new Dictionary<string, string>
                            {
                                { "allLaptops", "Все" },
                                { "priceAsc", "Цена ↑" },
                                { "priceDesc", "Цена ↓" }
                            };

                            foreach (var option in options)
                            {
                                <option value="@option.Key" selected="@(sortBy == option.Key ? "selected" : null)">@option.Value</option>
                            }
                        }
                    </select>
                </div>
                <div class="d-flex justify-content-between mt-3">
                    <a href="@Url.Action("ListLaptops", "Laptops")" class="btn btn-secondary">Сбросить фильтры</a>
                </div>
            </form>
        </div>
    </div>

    <!-- Products -->
    <div class="col-md-9">
        <h2 class="mb-4">Каталог ноутбуков</h2>
        <div id="laptop-list">
            @await Html.PartialAsync("_LaptopListPartial", Model.allLaptops, ViewData)
        </div>
    </div>
</div>

@{
<script>
    const form = document.getElementById('filter-form');
    const laptopList = document.getElementById('laptop-list');

    // Функция отправки формы и замены списка
    const fetchAndRender = () => {
        const formData = new FormData(form);
        const queryString = new URLSearchParams(formData).toString();

        fetch(`/Laptops/Filter?${queryString}`)
            .then(response => response.text())
            .then(html => {
                laptopList.innerHTML = html;
            });
    };

    // Селекты и input[type=number] — сразу при изменении
    form.querySelectorAll('select, input[type="number"]').forEach(el => {
        el.addEventListener('change', fetchAndRender);
    });

    // Поиск — с debounce
    const searchInput = form.querySelector('input[name="search"]');
    let timeout;
    searchInput.addEventListener('input', () => {
        clearTimeout(timeout);
        timeout = setTimeout(fetchAndRender, 400);
    });
</script>
}
